{"classData":[{"comment":"/**\n * The base module to enhance classes, create instances and the Neo namespace\n * @module Neo\n * @singleton\n * @borrows Neo.core.Util.bindMethods       as bindMethods\n * @borrows Neo.core.Util.capitalize        as capitalize\n * @borrows Neo.core.Util.createStyleObject as createStyleObject\n * @borrows Neo.core.Util.createStyles      as createStyles\n * @borrows Neo.core.Util.decamel           as decamel\n * @borrows Neo.core.Util.isArray           as isArray\n * @borrows Neo.core.Util.isBoolean         as isBoolean\n * @borrows Neo.core.Util.isDefined         as isDefined\n * @borrows Neo.core.Compare.isEqual        as isEqual\n * @borrows Neo.core.Util.isNumber          as isNumber\n * @borrows Neo.core.Util.isObject          as isObject\n * @borrows Neo.core.Util.isString          as isString\n * @borrows Neo.core.Util.toArray           as toArray\n * @tutorial 01_Concept\n */","meta":{"filename":"Neo.mjs","lineno":6,"columnno":0,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{}},"description":"The base module to enhance classes, create instances and the Neo namespace","kind":"module","name":"Neo","tags":[{"originalTitle":"singleton","title":"singleton","text":""},{"originalTitle":"tutorial","title":"tutorial","text":"01_Concept","value":"01_Concept"}],"longname":"module:Neo","$longname":"Neo","$kind":"module","id":3269,"neoClassName":"Neo"},{"comment":"/**\n     * A map containing ntypes as key and Neo classes or singletons as values\n     * @memberOf! module:Neo\n     * @protected\n     * @type Object\n     */","meta":{"range":[1264,1276],"filename":"Neo.mjs","lineno":40,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100096968","name":"ntypeMap","type":"ObjectExpression","value":"{}"}},"description":"A map containing ntypes as key and Neo classes or singletons as values","memberof":"module:Neo","access":"protected","type":{"names":["Object"]},"name":"ntypeMap","longname":"module:Neo.ntypeMap","kind":"member","scope":"static","$longname":"Neo.ntypeMap","$kind":"property","id":3270,"neoClassName":"Neo"},{"comment":"/**\n     * Needed for Neo.create. False for the main thread, true for the App, Data & Vdom worker\n     * @memberOf! module:Neo\n     * @protected\n     * @type Boolean\n     */","meta":{"range":[1460,1567],"filename":"Neo.mjs","lineno":47,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100096970","name":"insideWorker","type":"LogicalExpression","value":""}},"description":"Needed for Neo.create. False for the main thread, true for the App, Data & Vdom worker","memberof":"module:Neo","access":"protected","type":{"names":["Boolean"]},"name":"insideWorker","longname":"module:Neo.insideWorker","kind":"member","scope":"static","$longname":"Neo.insideWorker","$kind":"property","id":3271,"neoClassName":"Neo"},{"comment":"/**\n     * Internally used at the end of each class / module definition\n     * @memberOf module:Neo\n     * @param {Neo.core.Base} cls The Neo class to apply configs to\n     * @protected\n     * @tutorial 02_ClassSystem\n     */","meta":{"range":[1804,4826],"filename":"Neo.mjs","lineno":50,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100096980","name":"applyClassConfig","type":"FunctionExpression"},"vars":{"baseCfg":"module:Neo~baseCfg","ntypeMap":"module:Neo.applyClassConfig~ntypeMap","proto":"module:Neo~proto","protos":"module:Neo.applyClassConfig~protos","cfg":"module:Neo.applyClassConfig~cfg","config":"module:Neo~config","ctor":"module:Neo~ctor","overrides":"module:Neo.applyClassConfig~overrides","":null,"cls":"module:Neo~cls"}},"description":"Internally used at the end of each class / module definition","memberof":"module:Neo","params":[{"type":{"names":["Neo.core.Base"]},"description":"The Neo class to apply configs to","name":"cls"}],"access":"protected","tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"applyClassConfig","longname":"module:Neo.applyClassConfig","kind":"function","scope":"static","$longname":"Neo.applyClassConfig","$kind":"method","id":3272,"neoClassName":"Neo"},{"comment":"/**\n     * Maps methods from one namespace to another one\n     * @example\n     * // aliases\n     * Neo.applyFromNs(Neo, Util, {\n     *     createStyleObject: 'createStyleObject',\n     *     createStyles     : 'createStyles',\n     *     capitalize       : 'capitalize'\n     * }, true);\n     *\n     * // e.g. Neo.core.Util.isObject => Neo.isObject\n     * @memberOf module:Neo\n     * @param {Neo|Neo.core.Base} target The target class or singleton Instance or Neo\n     * @param {Neo.core.Base} namespace The class containing the methods\n     * @param {Object} config\n     * @param {Boolean} [bind] set this to true in case you want to bind methods to the \"from\" namespace\n     * @returns {Object} target\n     */","meta":{"range":[5546,5902],"filename":"Neo.mjs","lineno":169,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097379","name":"applyFromNs","type":"FunctionExpression"},"vars":{"fnName":"module:Neo.applyFromNs~fnName","":null}},"description":"Maps methods from one namespace to another one","examples":["// aliases\nNeo.applyFromNs(Neo, Util, {\n    createStyleObject: 'createStyleObject',\n    createStyles     : 'createStyles',\n    capitalize       : 'capitalize'\n}, true);\n\n// e.g. Neo.core.Util.isObject => Neo.isObject"],"memberof":"module:Neo","params":[{"type":{"names":["Neo","Neo.core.Base"]},"description":"The target class or singleton Instance or Neo","name":"target"},{"type":{"names":["Neo.core.Base"]},"description":"The class containing the methods","name":"namespace"},{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["Boolean"]},"optional":true,"description":"set this to true in case you want to bind methods to the \"from\" namespace","name":"bind"}],"returns":[{"type":{"names":["Object"]},"description":"target"}],"name":"applyFromNs","longname":"module:Neo.applyFromNs","kind":"function","scope":"static","$longname":"Neo.applyFromNs","$kind":"method","id":3273,"neoClassName":"Neo"},{"comment":"/**\n     * Maps a class to the global Neo or App namespace.\n     * Can get called for classes and singleton instances\n     * @memberOf module:Neo\n     * @param {Neo.core.Base} cls\n     */","meta":{"range":[6101,6546],"filename":"Neo.mjs","lineno":188,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097433","name":"applyToGlobalNs","type":"FunctionExpression"},"vars":{"proto":"module:Neo.applyToGlobalNs~proto","className":"module:Neo~className","nsArray":"module:Neo~nsArray","key":"module:Neo~key","ns":"module:Neo~ns","ns[undefined]":"module:Neo~ns.undefined]"}},"description":"Maps a class to the global Neo or App namespace.<br />Can get called for classes and singleton instances","memberof":"module:Neo","params":[{"type":{"names":["Neo.core.Base"]},"name":"cls"}],"name":"applyToGlobalNs","longname":"module:Neo.applyToGlobalNs","kind":"function","scope":"static","$longname":"Neo.applyToGlobalNs","$kind":"method","id":3274,"neoClassName":"Neo"},{"comment":"/**\n     * Copies all keys of defaults into target, in case they don't already exist\n     * @memberOf module:Neo\n     * @param {Object} target The target object\n     * @param {Object} defaults The object containing the keys you want to copy\n     * @returns {Object} target\n     */","meta":{"range":[6838,7162],"filename":"Neo.mjs","lineno":209,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097511","name":"assignDefaults","type":"FunctionExpression"},"vars":{"":null}},"description":"Copies all keys of defaults into target, in case they don't already exist","memberof":"module:Neo","params":[{"type":{"names":["Object"]},"description":"The target object","name":"target"},{"type":{"names":["Object"]},"description":"The object containing the keys you want to copy","name":"defaults"}],"returns":[{"type":{"names":["Object"]},"description":"target"}],"name":"assignDefaults","longname":"module:Neo.assignDefaults","kind":"function","scope":"static","$longname":"Neo.assignDefaults","$kind":"method","id":3275,"neoClassName":"Neo"},{"comment":"/**\n     * @memberOf module:Neo\n     * @param {Object|Array|*} obj\n     * @param {Boolean} deep=false Set this to true in case you want to clone nested objects as well\n     * @param {Boolean} ignoreNeoInstances=false returns existing instances if set to true\n     * @returns {Object|Array|*} the cloned input\n     */","meta":{"range":[7490,8253],"filename":"Neo.mjs","lineno":228,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097556","name":"clone","type":"FunctionExpression"},"vars":{"out":"module:Neo.clone~out"}},"memberof":"module:Neo","params":[{"type":{"names":["Object","Array","*"]},"name":"obj"},{"type":{"names":["Boolean"]},"defaultvalue":false,"description":"Set this to true in case you want to clone nested objects as well","name":"deep"},{"type":{"names":["Boolean"]},"defaultvalue":false,"description":"returns existing instances if set to true","name":"ignoreNeoInstances"}],"returns":[{"type":{"names":["Object","Array","*"]},"description":"the cloned input"}],"name":"clone","longname":"module:Neo.clone","kind":"function","scope":"static","$longname":"Neo.clone","$kind":"method","id":3276,"neoClassName":"Neo"},{"comment":"/**\n     * Creates a new instance using the originalConfig without the id\n     * @memberOf module:Neo\n     * @param {Neo.core.Base} instance\n     * @returns {Neo.core.Base} the cloned instance\n     */","meta":{"range":[8465,8660],"filename":"Neo.mjs","lineno":256,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097573","name":"cloneNeoInstance","type":"FunctionExpression"},"vars":{"config":"module:Neo.cloneNeoInstance~config"}},"description":"Creates a new instance using the originalConfig without the id","memberof":"module:Neo","params":[{"type":{"names":["Neo.core.Base"]},"name":"instance"}],"returns":[{"type":{"names":["Neo.core.Base"]},"description":"the cloned instance"}],"name":"cloneNeoInstance","longname":"module:Neo.cloneNeoInstance","kind":"function","scope":"static","$longname":"Neo.cloneNeoInstance","$kind":"method","id":3277,"neoClassName":"Neo"},{"comment":"/**\n     * Use Neo.create() instead of \"new\" to create instances of all Neo classes\n     * @example\n     * import Button from '../button/Base.mjs';\n     *\n     * Neo.create(Button, {\n     *     iconCls: 'fa fa-home',\n     *     text   : 'Home'\n     * });\n     * @example\n     * import Button from '../button/Base.mjs';\n     *\n     * Neo.create({\n     *     module : Button,\n     *     iconCls: 'fa fa-home',\n     *     text   : 'Home'\n     * });\n     * @example\n     * Neo.create('Neo.button.Base' {\n     *     iconCls: 'fa fa-home',\n     *     text   : 'Home'\n     * });\n     * @example\n     * Neo.create({\n     *     className: 'Neo.button.Base',\n     *     iconCls  : 'fa fa-home',\n     *     text     : 'Home'\n     * });\n     * @memberOf module:Neo\n     * @param {String|Object|Neo.core.Base} className\n     * @param {Object} [config]\n     * @returns {Neo.core.Base|null} The new class instance\n     * @tutorial 02_ClassSystem\n     */","meta":{"range":[9610,10653],"filename":"Neo.mjs","lineno":299,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097604","name":"create","type":"FunctionExpression"},"vars":{"type":"module:Neo.create~type","cls":"module:Neo~cls","instance":"module:Neo~instance","config":"module:Neo~config","className":"module:Neo~className"}},"description":"Use Neo.create() instead of \"new\" to create instances of all Neo classes","examples":["import Button from '../button/Base.mjs';\n\nNeo.create(Button, {\n    iconCls: 'fa fa-home',\n    text   : 'Home'\n});","import Button from '../button/Base.mjs';\n\nNeo.create({\n    module : Button,\n    iconCls: 'fa fa-home',\n    text   : 'Home'\n});","Neo.create('Neo.button.Base' {\n    iconCls: 'fa fa-home',\n    text   : 'Home'\n});","Neo.create({\n    className: 'Neo.button.Base',\n    iconCls  : 'fa fa-home',\n    text     : 'Home'\n});"],"memberof":"module:Neo","params":[{"type":{"names":["String","Object","Neo.core.Base"]},"name":"className"},{"type":{"names":["Object"]},"optional":true,"name":"config"}],"returns":[{"type":{"names":["Neo.core.Base","null"]},"description":"The new class instance"}],"tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"create","longname":"module:Neo.create","kind":"function","scope":"static","$longname":"Neo.create","$kind":"method","id":3278,"neoClassName":"Neo"},{"comment":"/**\n     *\n     */","meta":{"range":[10683,10695],"filename":"Neo.mjs","lineno":338,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097724","name":"emptyFn","type":"FunctionExpression"}},"name":"emptyFn","longname":"module:Neo~emptyFn","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~emptyFn","$kind":"method","id":3279,"neoClassName":"Neo"},{"comment":"/**\n     * Checks if there is a set method for a given property key inside the prototype chain\n     * @memberOf module:Neo\n     * @param {Neo.core.Base} proto The top level prototype of a class\n     * @param {String} key the property key to test\n     * @returns {Boolean}\n     */","meta":{"range":[10986,11356],"filename":"Neo.mjs","lineno":347,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097727","name":"hasPropertySetter","type":"FunctionExpression"},"vars":{"descriptor":"module:Neo~descriptor","proto":"module:Neo~proto"}},"description":"Checks if there is a set method for a given property key inside the prototype chain","memberof":"module:Neo","params":[{"type":{"names":["Neo.core.Base"]},"description":"The top level prototype of a class","name":"proto"},{"type":{"names":["String"]},"description":"the property key to test","name":"key"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasPropertySetter","longname":"module:Neo.hasPropertySetter","kind":"function","scope":"static","$longname":"Neo.hasPropertySetter","$kind":"method","id":3280,"neoClassName":"Neo"},{"comment":"/**\n     * Deep-merges a source object into a target object\n     * @memberOf module:Neo\n     * @param {Object} target\n     * @param {Object} source\n     * @returns {Object} target\n     */","meta":{"range":[11555,12070],"filename":"Neo.mjs","lineno":369,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097772","name":"merge","type":"FunctionExpression"},"vars":{"key":"module:Neo.merge~key","target[undefined]":"module:Neo~target[undefined]"}},"description":"Deep-merges a source object into a target object","memberof":"module:Neo","params":[{"type":{"names":["Object"]},"name":"target"},{"type":{"names":["Object"]},"name":"source"}],"returns":[{"type":{"names":["Object"]},"description":"target"}],"name":"merge","longname":"module:Neo.merge","kind":"function","scope":"static","$longname":"Neo.merge","$kind":"method","id":3281,"neoClassName":"Neo"},{"comment":"/**\n     * Maps a className string into a given or global namespace\n     * @example\n     * Neo.ns('Neo.button.Base', true);\n     * // =>\n     * // globalThis.Neo             = globalThis.Neo             || {};\n     * // globalThis.Neo.button      = globalThis.Neo.button      || {};\n     * // globalThis.Neo.button.Base = globalThis.Neo.button.Base || {};\n     * // return globalThis.Neo.button.Base;\n     *\n     * @memberOf module:Neo\n     * @param {Array|String} names The class name string containing dots or an Array of the string parts\n     * @param {Boolean} [create] Set create to true to create empty objects for non existing parts\n     * @param {Object} [scope] Set a different starting point as globalThis\n     * @returns {Object} reference to the toplevel namespace\n     */","meta":{"range":[12866,13216],"filename":"Neo.mjs","lineno":403,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097840","name":"ns","type":"FunctionExpression"},"vars":{"names":"module:Neo~names","":null}},"description":"Maps a className string into a given or global namespace","examples":["Neo.ns('Neo.button.Base', true);\n// =>\n// globalThis.Neo             = globalThis.Neo             || {};\n// globalThis.Neo.button      = globalThis.Neo.button      || {};\n// globalThis.Neo.button.Base = globalThis.Neo.button.Base || {};\n// return globalThis.Neo.button.Base;"],"memberof":"module:Neo","params":[{"type":{"names":["Array","String"]},"description":"The class name string containing dots or an Array of the string parts","name":"names"},{"type":{"names":["Boolean"]},"optional":true,"description":"Set create to true to create empty objects for non existing parts","name":"create"},{"type":{"names":["Object"]},"optional":true,"description":"Set a different starting point as globalThis","name":"scope"}],"returns":[{"type":{"names":["Object"]},"description":"reference to the toplevel namespace"}],"name":"ns","longname":"module:Neo.ns","kind":"function","scope":"static","$longname":"Neo.ns","$kind":"method","id":3282,"neoClassName":"Neo"},{"comment":"/**\n     * Creates instances of Neo classes using their ntype instead of the class name\n     * @example\n     * Neo.ntype('button' {\n     *     iconCls: 'fa fa-home',\n     *     text   : 'Home'\n     * });\n     * @example\n     * Neo.ntype({\n     *     ntype  : 'button',\n     *     iconCls: 'fa fa-home',\n     *     text   : 'Home'\n     * });\n     * @memberOf module:Neo\n     * @param {String|Object} ntype\n     * @param {Object} [config]\n     * @returns {Neo.core.Base}\n     * @see {@link module:Neo.create create}\n     */","meta":{"range":[13749,14249],"filename":"Neo.mjs","lineno":435,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097894","name":"ntype","type":"FunctionExpression"},"vars":{"config":"module:Neo~config","ntype":"module:Neo~ntype","className":"module:Neo.ntype~className"}},"description":"Creates instances of Neo classes using their ntype instead of the class name","examples":["Neo.ntype('button' {\n    iconCls: 'fa fa-home',\n    text   : 'Home'\n});","Neo.ntype({\n    ntype  : 'button',\n    iconCls: 'fa fa-home',\n    text   : 'Home'\n});"],"memberof":"module:Neo","params":[{"type":{"names":["String","Object"]},"name":"ntype"},{"type":{"names":["Object"]},"optional":true,"name":"config"}],"returns":[{"type":{"names":["Neo.core.Base"]}}],"see":["{@link module:Neo.create create}"],"name":"ntype","longname":"module:Neo.ntype","kind":"function","scope":"static","$longname":"Neo.ntype","$kind":"method","id":3283,"neoClassName":"Neo"},{"comment":"/**\n     * @param {*} item\n     * @returns {String|null}\n     */","meta":{"range":[14325,14843],"filename":"Neo.mjs","lineno":456,"columnno":4,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097956","name":"typeOf","type":"FunctionExpression"}},"params":[{"type":{"names":["*"]},"name":"item"}],"returns":[{"type":{"names":["String","null"]}}],"name":"typeOf","longname":"module:Neo~typeOf","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~typeOf","$kind":"method","id":3284,"neoClassName":"Neo"},{"comment":"/**\n * List of class properties which are not supposed to get mixed into other classes\n * @type {string[]}\n * @private\n */","meta":{"range":[14983,15159],"filename":"Neo.mjs","lineno":481,"columnno":6,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097981","name":"ignoreMixin","type":"ArrayExpression","value":"[\"_name\",\"classConfigApplied\",\"className\",\"constructor\",\"isClass\",\"mixin\",\"ntype\",\"observable\",\"registerToGlobalNs\"]"}},"description":"List of class properties which are not supposed to get mixed into other classes","type":{"names":["Array.<string>"]},"access":"private","name":"ignoreMixin","longname":"module:Neo~ignoreMixin","kind":"constant","scope":"inner","memberof":"module:Neo","params":[],"$longname":"Neo~ignoreMixin","$kind":"constant","id":3285,"neoClassName":"Neo"},{"comment":"/**\n * @param {Neo.core.Base} cls\n * @param {Array} mixins\n * @private\n */","meta":{"range":[15237,16194],"filename":"Neo.mjs","lineno":498,"columnno":0,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100097993","name":"applyMixins","type":"FunctionDeclaration","paramnames":["cls","mixins"]},"vars":{"mixins":"module:Neo~mixins","i":"module:Neo~applyMixins~i","len":"module:Neo~applyMixins~len","mixinClasses":"module:Neo~applyMixins~mixinClasses","mixin":"module:Neo~mixin","mixinCls":"module:Neo~mixinCls","mixinProto":"module:Neo~mixinProto","cls.prototype.mixins":"module:Neo~cls#mixins"}},"params":[{"type":{"names":["Neo.core.Base"]},"name":"cls"},{"type":{"names":["Array"]},"name":"mixins"}],"access":"private","name":"applyMixins","longname":"module:Neo~applyMixins","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~applyMixins","$kind":"method","id":3286,"neoClassName":"Neo"},{"comment":"/**\n * Creates get / set methods for class configs ending with an underscore\n * @param {Neo.core.Base} proto\n * @param {String} key\n * @private\n * @tutorial 02_ClassSystem\n */","meta":{"range":[16372,19258],"filename":"Neo.mjs","lineno":537,"columnno":0,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100098136","name":"autoGenerateGetSet","type":"FunctionDeclaration","paramnames":["proto","key"]},"vars":{"Neo[undefined]":"module:Neo~Neo.undefined]","Neo[undefined][undefined]":"module:Neo~Neo.undefined][undefined]","":null}},"description":"Creates get / set methods for class configs ending with an underscore","params":[{"type":{"names":["Neo.core.Base"]},"name":"proto"},{"type":{"names":["String"]},"name":"key"}],"access":"private","tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"autoGenerateGetSet","longname":"module:Neo~autoGenerateGetSet","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~autoGenerateGetSet","$kind":"method","id":3287,"neoClassName":"Neo"},{"comment":"/**\n * Checks if the class name exists inside the Neo or app namespace\n * @param {String} className\n * @returns {Boolean}\n * @private\n */","meta":{"range":[19398,19607],"filename":"Neo.mjs","lineno":624,"columnno":0,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100098444","name":"exists","type":"FunctionDeclaration","paramnames":["className"]},"vars":{"":null}},"description":"Checks if the class name exists inside the Neo or app namespace","params":[{"type":{"names":["String"]},"name":"className"}],"returns":[{"type":{"names":["Boolean"]}}],"access":"private","name":"exists","longname":"module:Neo~exists","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~exists","$kind":"method","id":3288,"neoClassName":"Neo"},{"comment":"/**\n * @param {Neo.core.Base} proto\n * @param {Neo.core.Base} mixinProto\n * @returns {Function}\n * @private\n */","meta":{"range":[19721,20545],"filename":"Neo.mjs","lineno":640,"columnno":0,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100098473","name":"mixinProperty","type":"FunctionDeclaration","paramnames":["proto","mixinProto"]},"vars":{"":null}},"params":[{"type":{"names":["Neo.core.Base"]},"name":"proto"},{"type":{"names":["Neo.core.Base"]},"name":"mixinProto"}],"returns":[{"type":{"names":["function"]}}],"access":"private","name":"mixinProperty","longname":"module:Neo~mixinProperty","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~mixinProperty","$kind":"method","id":3289,"neoClassName":"Neo"},{"comment":"/**\n * @param mixinCls\n * @returns {Function}\n * @private\n */","meta":{"range":[20609,20777],"filename":"Neo.mjs","lineno":670,"columnno":0,"path":"/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src","code":{"id":"astnode100098577","name":"mixReduce","type":"FunctionDeclaration","paramnames":["mixinCls"]},"vars":{"":null}},"params":[{"name":"mixinCls"}],"returns":[{"type":{"names":["function"]}}],"access":"private","name":"mixReduce","longname":"module:Neo~mixReduce","kind":"function","scope":"inner","memberof":"module:Neo","$longname":"Neo~mixReduce","$kind":"method","id":3290,"neoClassName":"Neo"}]}