"use strict";(self.webpackChunkneo_mjs_realworld_example_app=self.webpackChunkneo_mjs_realworld_example_app||[]).push([[647],{647:(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var r=s(767),a=s(74);class i extends a.Z{static getConfig(){return{className:"Neo.util.Array"}}static add(e,t){Array.isArray(t)||(t=[t]),t.forEach((t=>{e.includes(t)||e.push(t)}))}static difference(e=[],t=[]){return e.filter((e=>!t.includes(e)))}static hasItem(e,t){return e.includes(t)}static intersection(e=[],t=[]){return e.filter((e=>t.includes(e)))}static move(e,t,s){return t===s||(t>=e.length&&(t=e.length-1),e.splice(s,0,e.splice(t,1)[0])),e}static remove(e,t){let s;Array.isArray(t)||(t=[t]),t.forEach((t=>{s=e.indexOf(t),s>-1&&e.splice(s,1)}))}static removeAdd(e,t,s){this.remove(e,t),this.add(e,s)}static toggle(e,t){this[this.hasItem(e,t)?"remove":"add"](e,t)}static union(e,t){let s,r=[],a=e.concat(t),i=a.length,n={};for(;i--;)s=a[i],n[s]||(r.unshift(s),n[s]=!0);return r}static unshift(e,t){Array.isArray(t)||(t=[t]),t.forEach((t=>{e.includes(t)||e.unshift(t)}))}}Neo.applyClassConfig(i);const n=i;class o extends r.Z{endPointTimeouts=[];messageId=1;requestBuffer=20;socketConnections={};transactionId=1;static getConfig(){return{className:"Neo.manager.rpc.Message",singleton:!0,sorters:[{direction:"ASC",property:"id"}]}}onMessage(e){let t=Neo.manager.rpc.Api.get(`${e.service}.${e.method}`);return this[`onMessage${Neo.capitalize(t.type)}`](e,t)}onMessageAjax(e,t){return new Promise(((s,r)=>{let a=this,i=t.url;a.register({id:a.messageId,method:e.method,params:e.params,reject:r,resolve:s,service:e.service,transactionId:0,url:i}),a.messageId++,a.endPointTimeouts.includes(i)||(a.endPointTimeouts.push(i),setTimeout((()=>{a.resolveBufferTimeout(i)}),a.requestBuffer))}))}async onMessageWebsocket(e,t){let r=this,a=t.url,i=r.socketConnections[a];if(!i){let e=await s.e(72).then(s.bind(s,72));r.socketConnections[a]=i=Neo.create(e.default,{serverAddress:a})}return await i.promiseMessage(e)}async resolveBufferTimeout(e){let t,s=this,r=[],a=s.find({transactionId:0,url:e}),i=[],o=s.transactionId;a.forEach((e=>{e.transactionId=o,r.push(e.id),i.push({id:e.id,method:e.method,params:e.params,service:e.service})})),n.remove(s.endPointTimeouts,e),s.transactionId++,t=await Neo.Fetch.request(e,{},"post",JSON.stringify({tid:o,requests:i})),a.forEach((e=>{e.resolve()})),s.remove(r)}}Neo.applyClassConfig(o);let c=Neo.create(o);Neo.applyToGlobalNs(c);const l=c}}]);